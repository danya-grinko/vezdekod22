<?php

    require_once './../.lib/vk/autoload.php';
    require_once 'function.php';
    require_once 'config.php';

    define ("VK_TOKEN", $bot_vk ['vk_token']);
    define ("GROUP_ID", $bot_vk ['group_id']);
    define ("SECRET_KEY", $bot_vk ['secret_key']);
    define ("CONFIRMATION_CODE", $bot_vk ['confirmation_code']);
    define ("API_VK_VERSION", $bot_vk ['api_vk_version']);

    define ("BD_HOST", $bd ['host']);
    define ("BD_DATABASE", $bd ['database']);
    define ("BD_USER", $bd ['user']);
    define ("BD_PASSWORD", $bd ['password']);


    use VK\Client\Enums\VKLanguage;
    use VK\Client\VKApiClient;

    function myLog($str) {
        file_put_contents("php://stdout", "$str\n");
    }

        //–ö–Ω–æ–ø–∫–∏ :
    //–ö—Ä–∞—Å–Ω–∞—è
    const COLOR_NEGATIVE = 'negative';
    //–ó–µ–ª–µ–Ω–∞—è
    const COLOR_POSITIVE = 'positive';
    //–ë–µ–ª–∞—è
    const COLOR_DEFAULT = 'default';
    //–°–∏–Ω—è—è
    const COLOR_PRIMARY = 'primary';


    $json = file_get_contents('php://input');
    myLog($json);

    $data = json_decode($json, true);
    $type = $data['type'] ?? '' ;
    $object = $data ['object'] ?? [];
    $message_array_json = $object ['message'] ?? [] ;
    $user_id = $message_array_json ['from_id'] ?? '';

    $group_id = $data ['group_id'] ?? 0;
    $event_id = $data ['event_id'] ?? '';
    $secret_key = $data ['secret'] ?? '';


    $vk = new VKApiClient(API_VK_VERSION, VKLanguage::RUSSIAN);

    if ($type == 'confirmation' && $secret_key == SECRET_KEY) {
        exit (CONFIRMATION_CODE);
    } elseif ($type == 'confirmation') {
        exit ('error:confirmation');
    }

    $user = user ($user_id);


    if ($type == "message_new") {


        $vk = new VKApiClient(API_VK_VERSION, VKLanguage::RUSSIAN);
        $response = $vk->users()->get(VK_TOKEN, array(
            'user_ids' => $user_id,
            'fields' => array('first_name', 'last_name', 'city', 'bdate'),
        ));
        $first_name = $response[0]['first_name'] ?? '';
        $last_name = $response[0]['last_name'] ?? '';
        $city = $response[0]['city']['title'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
        $bdate = $response[0]['bdate'];

        $age = floor( ( time() - strtotime($bdate) ) / (60 * 60 * 24 * 365.25) );

        //–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON
        $date_msg = $message_array_json ['date'] ?? 0;
        $id_msg = $message_array_json ['id'] ?? 0;
        $out = $message_array_json ['out'] ?? 0;
        $peer_id = $message_array_json ['peer_id'] ?? 0;
        $text = $message_array_json ['text'] ?? '';
        $text_str = mb_strtolower($text) ?? '';
        $text_explode_command = explode("/", $text_str) ?? '';
        $text_explode_param = explode(":", $text_explode_command ['1']) ?? '';
        $text_explode = explode(":", $text) ?? '';
        $conversation_message_id = $message_array_json ['conversation_message_id'] ?? 0;
        //ARRAY
        $fwd_messages = $message_array_json ['fwd_messages'] ?? '';
        $important = $message_array_json ['important'] ?? '';
        $random_id_json = $message_array_json ['random_id'] ?? 0;
        //ARRAY
        $attachments = $message_array_json ['attachments'] ?? '';
        $payload = $message_array_json ['payload'] ?? '';
        $is_hidden = $message_array_json ['is_hidden'] ?? '';
        $reply_message = $message_array_json ['reply_message'] ?? ''; //–û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        $reply_date = $reply_message ['date'] ?? '';
        $reply_from_id = $reply_message ['from_id'] ?? 0;
        $reply_text = $reply_message ['text'] ?? '';
        $reply_attachments = $reply_message ['attachments'] ?? '';
        $reply_conversation_message_id = $reply_message ['conversation_message_id'] ?? 0;
        $reply_peer_id = $reply_message ['peer_id'] ?? 0;
        $reply_message_id = $reply_message ['id'] ?? 0;

        $client_info = $object ['client_info'] ?? [];
        //ARRAY
        $button_actions = $client_info ['button_actions'] ?? '';
        $keyboard = $client_info ['keyboard'] ?? '';
        $inline_keyboard = $client_info ['inline_keyboard'] ?? '';
        $carousel = $client_info ['carousel'] ?? '';
        $lang_id = $client_info ['lang_id'] ?? 0;


        if ($payload) {
            $payload = json_decode($payload, true);
        }


        if ($user_id != $peer_id) {
            $type_msg = "beseda";
        } elseif ($user_id == $peer_id) {
            $type_msg = "ls";
        }

        $count = count($button_actions);
        if ($count >= 1) {
            for ($i = 0; $i <= $count; $i++) {
                if ((isset($button_actions[$i])) && ($button_actions[$i] == 'text')) {
                    $user_kbd ['text'] = 1;
                    break;
                } else {
                    $user_kbd ['text'] = 0;
                }
            }

            for ($i = 0; $i <= $count; $i++) {
                if ((isset($button_actions[$i])) && ($button_actions[$i] == 'vkpay')) {
                    $user_kbd ['vkpay'] = 1;
                    break;
                } else {
                    $user_kbd ['vkpay'] = 0;
                }
            }

            for ($i = 0; $i <= $count; $i++) {
                if ((isset($button_actions[$i])) && ($button_actions[$i] == 'open_app')) {
                    $user_kbd ['open_app'] = 1;
                    break;
                } else {
                    $user_kbd ['open_app'] = 0;
                }
            }

            for ($i = 0; $i <= $count; $i++) {
                if ((isset($button_actions[$i])) && ($button_actions[$i] == 'location')) {
                    $user_kbd ['location'] = 1;
                    break;
                } else {
                    $user_kbd ['location'] = 0;
                }
            }

            for ($i = 0; $i <= $count; $i++) {
                if ((isset($button_actions[$i])) && ($button_actions[$i] == 'open_link')) {
                    $user_kbd ['open_link'] = 1;
                    break;
                } else {
                    $user_kbd ['open_link'] = 0;
                }
            }

            for ($i = 0; $i <= $count; $i++) {
                if ((isset($button_actions[$i])) && ($button_actions[$i] == 'open_photo')) {
                    $user_kbd ['open_photo'] = 1;
                    break;
                } else {
                    $user_kbd ['open_photo'] = 0;
                }
            }

            for ($i = 0; $i <= $count; $i++) {
                if ((isset($button_actions[$i])) && ($button_actions[$i] == 'callback')) {
                    $user_kbd ['callback'] = 1;
                    break;
                } else {
                    $user_kbd ['callback'] = 0;
                }
            }

            if ((isset($inline_keyboard)) && ($inline_keyboard == 'true')) {
                $user_kbd ['inline'] = 1;
            } else {
                $user_kbd ['inline'] = 0;
            }

            if (isset($carousel) && $carousel == 1) {
                $user_kbd ['carousel'] = 1;
            } else {
                $user_kbd ['carousel'] = 0;
            }

            if (isset($keyboard) && $keyboard == 1) {
                $user_kbd ['keyboard'] = 1;
            } else {
                $user_kbd ['keyboard'] = 0;
            }

            if (isset($lang_id) && $lang_id == 0) {
                $lang = 'ru';
            } elseif (isset($lang_id) && $lang_id == 1) {
                $lang = 'en';
            }


            if ($text_str == "–ø—Ä–∏–≤–µ—Ç" || $text_str == "–Ω–∞—á–∞—Ç—å" || $text_str == "—Å—Ç–∞—Ä—Ç") {

                $msg = "–ü—Ä–∏–≤–µ—Ç –≤–µ–∑–¥–µ–∫–æ–¥–µ—Ä–∞–º! ü•∞";

                $kbd = [
                    'inline' => true,
                    'buttons' => [
                        [kbd_text("–ü—Ä–∏–≤–µ—Ç ü•∞",  COLOR_POSITIVE, array_kbd("kbd", "hi", "bot", 1))],
                        [kbd_text("–ü–æ–∫–∞ üëπ",  COLOR_NEGATIVE, array_kbd("kbd", "bye", "bot", 1))],
                    ]
                ];

                messages_send_kbd($user_id, $msg, $kbd);
                exit ('ok');

            } elseif ($text_str == "–º–µ–º" || $text_str == "–º–µ–º—ã") {

                if ($user ['meme'] == 'true') {
                    $msg = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π üôÉ";
                } else {
                    $msg = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –º–µ–º–∞—Å–∏–∫–æ–≤.\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –æ—Ü–µ–Ω–∏—Ç—å –º–µ–º—á–∏–∫–∏ 2020-–æ–≥–æ –≥–æ–¥–∞ –∏–∑ –º–∞—Ä–∞—Ñ–æ–Ω–∞ \"–í–µ–∑–¥–µ–∫–æ–¥\", –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π –º–µ–º—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —É–≤–∏–¥—è—Ç –∏ —Å–º–æ–≥—É—Ç –æ—Ü–µ–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üòé";
                }

                $kbd = [
                    'inline' => true,
                    'buttons' => [
                        [kbd_callback("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–º—ã",  COLOR_POSITIVE, array_kbd("meme", "", "bot", 1))],
                        [kbd_callback("–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –º–µ–º",  COLOR_PRIMARY, array_kbd("meme", "", "bot", 4))],
                        [kbd_callback("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",  COLOR_PRIMARY, array_kbd("static", "", "bot", 1))],
                    ]
                ];

                messages_send_kbd($user_id, $msg, $kbd);
                exit ('ok');

            } elseif ($text_str == "–±–¥") {
                $msg = "–î–∞—é —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø –∫ –ë–î : \n\n–°–∞–π—Ç : sbots.ru/sql/\n\n–õ–æ–≥–∏–Ω : vezdekod\n–ü–∞—Ä–æ–ª—å : VKCOMvezdekod2022";
                messages_send($user_id, $msg);
            } elseif ($user ['act'] == "") {
                $msg = "–¢–∞–∫–æ–º—É –º–µ–Ω—è –Ω–µ —É—á–∏–ª–∏ ü•¥";
                messages_send($user_id, $msg);
            }

            if ($user ['act'] == "meme:add") {

                $media_id_vk = $attachments[0]['photo']['id'];
                if (isset($attachments[0]['photo']['sizes'][9]['url'])) {
                    $link = $attachments[0]['photo']['sizes'][9]['url'];
                } else {
                    $link = $attachments[0]['photo']['sizes'][6]['url'];
                }

                $owner_id_vk = $attachments[0]['photo']['owner_id'];

                //1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä.
                $file = file_get_contents($link);
                $filename = "./meme/photo".$owner_id_vk."_".$media_id_vk.".png";
                $filename_bd = "photo".$owner_id_vk."_".$media_id_vk.".png";
                file_put_contents($filename, $file);

                //2.–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                $response = $vk->photos()->getMessagesUploadServer(VK_TOKEN, [
                    'peer_id' => $peer_id
                ]);

                $upload_url = $response ['upload_url'];

                //3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π upload_url
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º cURL
                $ch = curl_init();
                // –ü–æ–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞
                $parameters = [
                    'file' => new CURLFile($filename)  // PHP >= 5.5.0
                    // 'file1' => '@path/to/1.jpg' // PHP < 5.5.0
                ];
                // –°—Å—ã–ª–∫–∞, –∫—É–¥–∞ –±—É–¥–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É - —ç—Ç–æ upload_url
                curl_setopt($ch, CURLOPT_URL, $upload_url);
                // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ —ç—Ç–æ POST-–∑–∞–ø—Ä–æ—Å
                curl_setopt($ch, CURLOPT_POST, true);
                // –ì–æ–≤–æ—Ä–∏–º cURL, –∫–∞–∫–∏–µ –ø–æ–ª—è –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
                curl_setopt($ch, CURLOPT_POSTFIELDS, $parameters);
                // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç —Å–µ—Ä–≤–µ—Ä, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                // –í—ã–ø–æ–ª–Ω—è–µ–º cURL-–∑–∞–ø—Ä–æ—Å. –í —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –±—É–¥–µ—Ç JSON-–æ—Ç–≤–µ—Ç –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                $curl_result = curl_exec($ch);
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                curl_close($ch);
                //–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                $result = json_decode ($curl_result);
                $server = $result->server;
                $photo = $result->photo;
                $hash = $result->hash;

                //4. –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                $response_save = $vk->photos()->saveMessagesPhoto(VK_TOKEN, [
                    'photo' => $photo,
                    'server' => $server,
                    'hash' => $hash
                ]);
                $response_array = $response_save [0];
                $media_id = $response_save[0]['id'];
                $owner_id = $response_save[0]['owner_id'];

                $attachment = "photo{$owner_id}_{$media_id}";

                meme_add ($user_id, $filename_bd);

                $msg = "–ú–µ–º —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω. –°–ø–∞—Å–∏–±–æ ‚ù§Ô∏è";

                $kbd = [
                    'inline' => true,
                    'buttons' => [
                        [kbd_callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",  COLOR_NEGATIVE, array_kbd("meme", "", "bot", 5))]
                    ]
                ];

                messages_send_attachment_kbd($user_id, $msg, $attachment, $kbd);
                exit ('ok');

            }


            if (is_array($payload)) {

                $name = $payload ['name'] ?? "";
                $act = $payload ['act'] ?? "";
                $section = $payload ['section'] ?? "";
                $cmd = $payload ['cmd'] ?? "";


                if ($section == "bot") {

                    if ($name == "kbd") {

                        if ($cmd == 1) {

                            if ($act == "hi") {

                                $msg = $first_name.", —Ç—ã —Å –≥–æ—Ä–æ–¥–∞ - \"{$city}\" ";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_text("–î–∞ üëçüèª",  COLOR_POSITIVE, array_kbd("kbd", "yes", "bot", 2)), kbd_callback("–ù–µ—Ç üëéüèª",  COLOR_NEGATIVE, array_kbd("kbd", "no", "bot", 2))]
                                    ]
                                ];

                            } else {

                                $msg = "–Ø –±—ã –æ–±–∏–¥–µ–ª—Å—è, –Ω–æ –ë–æ—Ç—ã –Ω–µ –æ–±–∏–∂–∞—é—Ç—Å—è :)\n\n{$first_name}, —Ç—ã —Å –≥–æ—Ä–æ–¥–∞ - \"{$city}\" ";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_text("–î–∞ üëçüèª",  COLOR_POSITIVE, array_kbd("kbd", "yes", "bot", 2)), kbd_text("–ù–µ—Ç üëéüèª",  COLOR_NEGATIVE, array_kbd("kbd", "no", "bot", 2))]
                                    ]
                                ];

                            }

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');

                        } elseif ($cmd == 2) {

                            if ($act == "yes") {

                                messages_send_sticker($user_id, 64473);

                                if (isset($bdate) && $age != 0) {

                                    $msg = "–£—Ä–∞, —è —É–≥–∞–¥–∞–ª —Å –≥–æ—Ä–æ–¥–æ–º. –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É—é —É–≥–∞–¥–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç...üôà\n\n {$first_name}, —Ç–µ–±–µ  {$age} –ª–µ—Ç ? ";

                                    $kbd = [
                                        'inline' => true,
                                        'buttons' => [
                                            [kbd_text("–î–∞ üëçüèª",  COLOR_POSITIVE, array_kbd("kbd", "age_vk", "bot", 3))],
                                            [kbd_text("–ù–µ—Ç, –º–µ–Ω—å—à–µ 18-—Ç–∏",  COLOR_PRIMARY, array_kbd("kbd", "", "bot", 3))],
                                            [kbd_text("–ù–µ—Ç, –±–æ–ª—å—à–µ 18-—Ç–∏",  COLOR_PRIMARY, array_kbd("kbd", "", "bot", 3))],
                                        ]
                                    ];

                                } else {

                                    $msg = "–£—Ä–∞, —è —É–≥–∞–¥–∞–ª —Å –≥–æ—Ä–æ–¥–æ–º. –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É—é —É–≥–∞–¥–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç...üôà\n\n {$first_name} –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç ? ";

                                    $kbd = [
                                        'inline' => true,
                                        'buttons' => [
                                            [kbd_text("–ú–µ–Ω—å—à–µ 18-—Ç–∏",  COLOR_POSITIVE, array_kbd("kbd", "", "bot", 3))],
                                            [kbd_text("–ë–æ–ª—å—à–µ 18-—Ç–∏",  COLOR_POSITIVE, array_kbd("kbd", "", "bot", 3))],
                                        ]
                                    ];

                                }

                            } else {

                                if (isset($bdate) && $age != 0) {

                                    $msg = "–ü—É—Å—Ç—å –≥–æ—Ä–æ–¥ —è –∏ –Ω–µ —É–≥–∞–¥–∞–ª, –Ω–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–ø—Ä–æ–±—É—é —É–≥–∞–¥–∞—Ç—å —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç üôà\n\n {$first_name}, –í–∞–º  {$age} –ª–µ—Ç ? ";

                                    $kbd = [
                                        'inline' => true,
                                        'buttons' => [
                                            [kbd_text("–î–∞ üëçüèª",  COLOR_POSITIVE, array_kbd("kbd", "age_vk", "bot", 3))],
                                            [kbd_text("–ù–µ—Ç, –º–µ–Ω—å—à–µ 18-—Ç–∏",  COLOR_PRIMARY, array_kbd("kbd", "", "bot", 3))],
                                            [kbd_text("–ù–µ—Ç, –±–æ–ª—å—à–µ 18-—Ç–∏",  COLOR_PRIMARY, array_kbd("kbd", "", "bot", 3))],
                                        ]
                                    ];

                                } else {

                                    $msg = "–ü—É—Å—Ç—å –≥–æ—Ä–æ–¥ —è –∏ –Ω–µ —É–≥–∞–¥–∞–ª, –Ω–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–ø—Ä–æ–±—É—é —É–≥–∞–¥–∞—Ç—å —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç üôà\n\n {$first_name} –°–∫–æ–ª—å–∫–æ –í–∞–º –ª–µ—Ç ? ";

                                    $kbd = [
                                        'inline' => true,
                                        'buttons' => [
                                            [kbd_text("–ú–µ–Ω—å—à–µ 18-—Ç–∏",  COLOR_PRIMARY, array_kbd("kbd", "", "bot", 3))],
                                            [kbd_text("–ë–æ–ª—å—à–µ 18-—Ç–∏",  COLOR_PRIMARY, array_kbd("kbd", "", "bot", 3))],
                                        ]
                                    ];

                                }

                            }

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');

                        } elseif ($cmd == 3) {

                            if ($act == "age_vk") {

                                messages_send_sticker($user_id,  14152);

                                $msg = "—è –∂–µ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ —É–≥–∞–¥–∞—é üòè \n\n –ö–∞–∫ —Ç–µ–±–µ –º–∞—Ä–∞—Ñ–æ–Ω \"–í–µ–∑–¥–µ–∫–æ–¥\" –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ?  ";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_text("üëçüèª",  COLOR_POSITIVE, array_kbd("kbd", "like", "bot", 4)), kbd_text("üëéüèª",  COLOR_NEGATIVE, array_kbd("kbd", "no_like", "bot", 4))]
                                    ]
                                ];

                            } else {

                                $msg = "–≠—Ö, –Ω–µ —É–≥–∞–¥–∞–ª üòî \n\n –ö–∞–∫ —Ç–µ–±–µ –º–∞—Ä–∞—Ñ–æ–Ω \"–í–µ–∑–¥–µ–∫–æ–¥\" –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ?  ";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_text("üëçüèª",  COLOR_POSITIVE, array_kbd("kbd", "like", "bot", 4)), kbd_text("üëéüèª",  COLOR_NEGATIVE, array_kbd("kbd", "no_like", "bot", 4))]
                                    ]
                                ];

                            }

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');

                        } elseif ($cmd == 4) {

                            if ($act == "like") {

                                messages_send_sticker($user_id,  58232);

                                $msg = "–ú–Ω–µ —Ç–æ–∂–µ –Ω—Ä–∞–≤–∏—Ç—Å—è ü•∞ –°–ø–∞—Å–∏–±–æ @team (–ö–æ–º–∞–Ω–¥–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ) –∑–∞ –æ—Ç–ª–∏—á–Ω—ã–π –º–∞—Ä–∞—Ñ–æ–Ω ‚ù§Ô∏è\n\n–ö—Å—Ç–∞—Ç–∏, –∫–∞–∫ –¥—É–º–∞–µ—à—å –≤ –∫–∞–∫–æ–º –≥–æ–¥—É –ö–æ–º–∞–Ω–¥–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –ø—Ä–∏–¥—É–º–∞–ª–∞ –º–∞—Ä–∞—Ñ–æ–Ω \"–í–µ–∑–¥–µ–∫–æ–¥\" ?";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_text("2019",  COLOR_PRIMARY, array_kbd("kbd", "2019", "bot", 5)), kbd_text("2020",  COLOR_PRIMARY, array_kbd("kbd", "2020", "bot", 5))],
                                        [kbd_text("2021",  COLOR_PRIMARY, array_kbd("kbd", "2021", "bot", 5)), kbd_text("2022",  COLOR_PRIMARY, array_kbd("kbd", "2022", "bot", 5))],
                                    ]
                                ];

                            } else {

                                $msg = "–£ –∫–∞–∂–¥–æ–≥–æ —Å–≤–æ—ë –º–Ω–µ–Ω–∏–µ. –ú–Ω–µ –≤–æ—Ç –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å ‚ù§Ô∏è\n\n–ö—Å—Ç–∞—Ç–∏, –∫–∞–∫ –¥—É–º–∞–µ—à—å –≤ –∫–∞–∫–æ–º –≥–æ–¥—É –ö–æ–º–∞–Ω–¥–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –ø—Ä–∏–¥—É–º–∞–ª–∞ –º–∞—Ä–∞—Ñ–æ–Ω \"–í–µ–∑–¥–µ–∫–æ–¥\" ?";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_text("2019",  COLOR_PRIMARY, array_kbd("kbd", "2019", "bot", 5)), kbd_text("2020",  COLOR_PRIMARY, array_kbd("kbd", "2020", "bot", 5))],
                                        [kbd_text("2021",  COLOR_PRIMARY, array_kbd("kbd", "2021", "bot", 5)), kbd_text("2022",  COLOR_PRIMARY, array_kbd("kbd", "2022", "bot", 5))],
                                    ]
                                ];

                            }

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');

                        } elseif ($cmd == 5) {

                            if ($act == "2020") {

                                messages_send_sticker($user_id,  51593);

                                $msg = "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã —É–≥–∞–¥–∞–ª !\n\n\"2020-–π –Ω–µ –ø–æ—â–∞–¥–∏–ª –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ—Ñ–ª–∞–π–Ω-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π ‚Äî –≤ —Ç–æ–º —á–∏—Å–ª–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π VK Hackathon. –†–∞–Ω—å—à–µ –º—ã –ø—Ä–æ–≤–æ–¥–∏–ª–∏ –µ–≥–æ –≤ –≠—Ä–º–∏—Ç–∞–∂–µ –∏ –ú–∞–Ω–µ–∂–µ, –∞ –≤ —ç—Ç–æ–º –≥–æ–¥—É ‚Äî –≤ –ø–∞–±–ª–∏–∫–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\" - –û—Ç–∫—Ä—ã–≤–æ–∫ –∏–∑ —Å—Ç–∞—Ç—å–∏";

                                $link = "https://habr.com/ru/company/vk/blog/526236/";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_link($link, "üî• –°—Ç–∞—Ç—å—è üî•")],
                                        [kbd_text("–£–∂–µ –ø—Ä–æ—á–∏—Ç–∞–ª üòá",  COLOR_PRIMARY, array_kbd("kbd", "yes", "bot", 6))],
                                        [kbd_text("–ù–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üòï",  COLOR_DEFAULT, array_kbd("kbd", "no", "bot", 6))]
                                    ]
                                ];

                            } else {

                                $msg = "–¢—ã –±—ã–ª –±–ª–∏–∑–æ–∫... –ú–∞—Ä–∞—Ñ–æ–Ω \"–í–µ–∑–¥–µ–∫–æ–¥\" –ø–æ—è–≤–∏–ª—Å—è –≤ 2020-–æ–º –≥–æ–¥—É\n\n\"2020-–π –Ω–µ –ø–æ—â–∞–¥–∏–ª –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ—Ñ–ª–∞–π–Ω-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π ‚Äî –≤ —Ç–æ–º —á–∏—Å–ª–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π VK Hackathon. –†–∞–Ω—å—à–µ –º—ã –ø—Ä–æ–≤–æ–¥–∏–ª–∏ –µ–≥–æ –≤ –≠—Ä–º–∏—Ç–∞–∂–µ –∏ –ú–∞–Ω–µ–∂–µ, –∞ –≤ —ç—Ç–æ–º –≥–æ–¥—É ‚Äî –≤ –ø–∞–±–ª–∏–∫–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\" - –û—Ç–∫—Ä—ã–≤–æ–∫ –∏–∑ —Å—Ç–∞—Ç—å–∏";

                                $link = "https://habr.com/ru/company/vk/blog/526236/";

                                $kbd = [
                                    'inline' => true,
                                    'buttons' => [
                                        [kbd_link($link, "üî• –°—Ç–∞—Ç—å—è üî•")],
                                        [kbd_text("–£–∂–µ –ø—Ä–æ—á–∏—Ç–∞–ª üòá",  COLOR_POSITIVE, array_kbd("kbd", "yes", "bot", 6))],
                                        [kbd_text("–ù–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üòï",  COLOR_POSITIVE, array_kbd("kbd", "no", "bot", 6))]
                                    ]
                                ];

                            }

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');


                        } elseif ($cmd == 6) {

                            if ($act == "yes") {

                                $msg = "–£ –Ω–∞—Å —Å —Ç–æ–±–æ–π –ø–æ—Ö–æ–∂–∏–µ –≤–∫—É—Å—ã üòè \n\n–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –ª–∏ —Ç—ã –¥–æ —ç—Ç–æ–≥–æ –≤ –º–∞—Ä–∞—Ñ–æ–Ω–µ \"–í–µ–∑–¥–µ–∫–æ–¥\" –æ—Ç –ö–æ–º–∞–Ω–¥—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ? ";

                            } else {

                                $msg = "–£ –Ω–∞—Å —Å —Ç–æ–±–æ–π —Ä–∞–∑–Ω—ã–µ –≤–∫—É—Å—ã, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ üôÉ\n\n–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –ª–∏ —Ç—ã –¥–æ —ç—Ç–æ–≥–æ –≤ –º–∞—Ä–∞—Ñ–æ–Ω–µ \"–í–µ–∑–¥–µ–∫–æ–¥\" –æ—Ç –ö–æ–º–∞–Ω–¥—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ? ";

                            }

                            $kbd = [
                                'inline' => true,
                                'buttons' => [
                                    [kbd_text("–ö–æ–Ω–µ—á–Ω–æ",  COLOR_PRIMARY, array_kbd("kbd", "yes", "bot", 7))],
                                    [kbd_text("–ù–µ—Ç, –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —Ç–æ–ª—å–∫–æ",  COLOR_PRIMARY, array_kbd("kbd", "no", "bot", 7))]
                                ]
                            ];

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');

                        } elseif ($cmd == 7) {

                            if ($act == "yes") {

                                $msg = "–ö—Ä—É—Ç–æ ‚ò∫Ô∏è \n\n–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ 2020 –≥–æ–¥—É, —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ 2021 –≥–æ–¥—É, –Ω–æ –∏–∑-–∑–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ —É—Å–ø–µ–ª ü•≤, –∑–∞—Ç–æ —É—Å–ø–µ–ª –≤ 2022 ))\n\n –ê —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –∏–ª–∏ —É—á–∏—à—å—Å—è ?";

                            } else {

                                $msg = "–ù—É –Ω–∏—á–µ–≥–æ, –≤—Å–µ –±—ã–≤–∞–µ—Ç –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ ‚ò∫Ô∏è \n\n–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ 2020 –≥–æ–¥—É, —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ 2021 –≥–æ–¥—É, –Ω–æ –∏–∑-–∑–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ —É—Å–ø–µ–ª ü•≤, –∑–∞—Ç–æ —É—Å–ø–µ–ª –≤ 2022 ))\n\n –ê —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –∏–ª–∏ —É—á–∏—à—å—Å—è ?";

                            }

                            $kbd = [
                                'inline' => true,
                                'buttons' => [
                                    [kbd_text("–†–∞–±–æ—Ç–∞—é",  COLOR_DEFAULT, array_kbd("kbd", "", "bot", 8))],
                                    [kbd_text("–£—á—É—Å—å",  COLOR_DEFAULT, array_kbd("kbd", "", "bot", 8))],
                                    [kbd_text("–†–∞–±–æ—Ç–∞—é –∏ —É—á—É—Å—å",  COLOR_DEFAULT, array_kbd("kbd", "", "bot", 8))]
                                ]
                            ];

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');

                        } elseif ($cmd == 8) {

                            $msg = "–¢—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü ! –õ—é–±–∏—à—å –º–µ–º—ã üòÇ ?";

                            $kbd = [
                                'inline' => true,
                                'buttons' => [
                                    [kbd_text("–ö–æ–Ω–µ—á–Ω–æ",  COLOR_POSITIVE, array_kbd("kbd", "yes", "bot", 9)), kbd_text("–ù–µ-–∞",  COLOR_NEGATIVE, array_kbd("kbd", "no", "bot", 9))],
                                    [kbd_text("–ß—Ç–æ —ç—Ç–æ ?",  COLOR_DEFAULT, array_kbd("kbd", "dead", "bot", 9))],
                                ]
                            ];

                            messages_send_kbd($user_id, $msg, $kbd);
                            exit ('ok');

                        } elseif ($cmd == 9) {

                            if ($act == "dead") {
                                messages_send_sticker($user_id,  12690);
                                $msg = "–≠—Ç–æ —Ç–∞–∫–∏–µ –ø—Ä–∏–∫–æ–ª—ã –∏–∑ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–æ–≤ :) \n\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–ª–æ–≤–æ \"–ú–µ–º—ã\", –∏ —è –ø–æ–∫–∞–∂—É —á—Ç–æ —ç—Ç–æ ))";
                            } elseif ($act == "yes") {
                                $msg = "–ú—ã —Ç–æ–∂–µ –ª—é–±–∏–º –º–µ–º—ã. –ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–ª–æ–≤–æ \"–ú–µ–º—ã\", –∏ –º—ã –≤–º–µ—Å—Ç–µ –ø–æ—É–≥–∞—Ä–∞–µ–º —Å –º–µ–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–∞—Ä–∞—Ñ–æ–Ω–∞ \"–í–µ–∑–¥–µ–∫–æ–¥\" –≤ 2020 –≥–æ–¥—É üòè\n\n –ë—ã–ª–æ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–æ–±–æ–π, –Ω–æ –Ω–∞ —ç—Ç–æ–º –Ω–∞—à–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –ø–æ–¥–æ—à–ª–æ –∫ –∫–æ–Ω—Ü—É ‚ò∫";
                            } elseif ($act == "no") {
                                $msg = "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, —Ç–æ –ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–ª–æ–≤–æ \"–ú–µ–º—ã\", –∏ –º—ã –≤–º–µ—Å—Ç–µ –ø–æ—É–≥–∞—Ä–∞–µ–º —Å –º–µ–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–∞—Ä–∞—Ñ–æ–Ω–∞ \"–í–µ–∑–¥–µ–∫–æ–¥\" –≤ 2020 –≥–æ–¥—É üòè\n\n –ë—ã–ª–æ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–æ–±–æ–π, –Ω–æ –Ω–∞ —ç—Ç–æ–º –Ω–∞—à–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –ø–æ–¥–æ—à–ª–æ –∫ –∫–æ–Ω—Ü—É ‚ò∫";
                            }

                            messages_send($user_id, $msg);
                            exit ('ok');

                        }

                    }

                }

            }

        }


    } elseif ($type == "message_event") {

        $user_id = $object ['user_id'] ?? 0;
        $peer_id = $object ['peer_id'] ?? 0;
        $event_id = $object ['event_id'] ?? '';
        $payload = $object ['payload'] ?? '';
        $conversation_message_id = $object ['conversation_message_id'] ?? 0;

        $vk = new VKApiClient(API_VK_VERSION, VKLanguage::RUSSIAN);
        $response = $vk->users()->get(VK_TOKEN, array(
            'user_ids' => $user_id,
            'fields' => array('first_name', 'last_name', 'city', 'bdate'),
        ));
        $first_name = $response[0]['first_name'] ?? '';
        $last_name = $response[0]['last_name'] ?? '';
        $city = $response[0]['city']['title'] ?? '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
        $bdate = $response[0]['bdate'];

        $age = floor( ( time() - strtotime($bdate) ) / (60 * 60 * 24 * 365.25) );

        if (is_array($payload)) {

            $name = $payload ['name'] ?? "";
            $act = $payload ['act'] ?? "";
            $section = $payload ['section'] ?? "";
            $cmd = $payload ['cmd'] ?? "";


            if ($section == "bot") {
                if ($name == "meme") {
                    if ($cmd == 1) {

                        $arr = meme_check($user_id);

                        if ($arr == "max:error") {
                            $msg = "–í—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –º–µ–º—ã))";
                            messages_edit($conversation_message_id, $user_id, $msg);
                            exit ('ok');
                        }

                        $meme_count = $arr ['meme_count'];

                        //1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä.
                        $filename = "./meme/{$arr ['filename']}";

                        //2.–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                        $response = $vk->photos()->getMessagesUploadServer(VK_TOKEN, [
                            'group_id' => GROUP_ID
                        ]);

                        $upload_url = $response ['upload_url'];

                        //3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π upload_url
                        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º cURL
                        $ch = curl_init();
                        // –ü–æ–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞
                        $parameters = [
                            'file' => new CURLFile($filename)  // PHP >= 5.5.0
                            // 'file1' => '@path/to/1.jpg' // PHP < 5.5.0
                        ];
                        // –°—Å—ã–ª–∫–∞, –∫—É–¥–∞ –±—É–¥–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É - —ç—Ç–æ upload_url
                        curl_setopt($ch, CURLOPT_URL, $upload_url);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ —ç—Ç–æ POST-–∑–∞–ø—Ä–æ—Å
                        curl_setopt($ch, CURLOPT_POST, true);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, –∫–∞–∫–∏–µ –ø–æ–ª—è –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
                        curl_setopt($ch, CURLOPT_POSTFIELDS, $parameters);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç —Å–µ—Ä–≤–µ—Ä, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è
                        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                        // –í—ã–ø–æ–ª–Ω—è–µ–º cURL-–∑–∞–ø—Ä–æ—Å. –í —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –±—É–¥–µ—Ç JSON-–æ—Ç–≤–µ—Ç –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                        $curl_result = curl_exec($ch);
                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                        curl_close($ch);
                        //–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                        $result = json_decode ($curl_result);

                        if (!$result) {
                            $msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞...";
                            print_r ($curl_result);
                            messages_send($user_id, $msg);
                            exit ('ok');
                        }

                        $server = $result->server;
                        $photo = $result->photo;
                        $hash = $result->hash;

                        //4. –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                        $response_save = $vk->photos()->saveMessagesPhoto(VK_TOKEN, [
                            'photo' => $photo,
                            'server' => $server,
                            'hash' => $hash
                        ]);
                        $response_array = $response_save [0];
                        $media_id = $response_save[0]['id'];
                        $owner_id = $response_save[0]['owner_id'];

                        $attachment = "photo{$owner_id}_{$media_id}";

                        $msg = "–ö–∞–∫ –í–∞–º —ç—Ç–æ—Ç –º–µ–º ? üòÇ";

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("üëçüèª",  COLOR_POSITIVE, array_kbd("meme", $meme_count, "bot", 2)), kbd_callback("üëéüèª",  COLOR_NEGATIVE, array_kbd("meme", $meme_count, "bot", 3))],
                                [kbd_callback("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",  COLOR_DEFAULT, array_kbd("meme", "", "bot", 1))],
                                [kbd_callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",  COLOR_PRIMARY, array_kbd("meme", "", "bot", 5))]
                            ]
                        ];

                        messages_edit_attachment_kbd($conversation_message_id, $user_id, $msg, $attachment, $kbd);
                        exit ('ok');

                    } elseif ($cmd == 2) {

                        meme_like($user_id, $act);

                        $arr = meme_check($user_id);

                        if ($arr == "max:error") {
                            $msg = "–í—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –º–µ–º—ã))";
                            messages_edit($conversation_message_id, $user_id, $msg);
                            exit ('ok');
                        }

                        $meme_count = $arr ['meme_count'];

                        $media_id_vk = $attachments[0]['photo']['id'];
                        if (isset($attachments[0]['photo']['sizes'][9]['url'])) {
                            $link = $attachments[0]['photo']['sizes'][9]['url'];
                        } else {
                            $link = $attachments[0]['photo']['sizes'][6]['url'];
                        }

                        $owner_id_vk = $attachments[0]['photo']['owner_id'];

                        //1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä.
                        $filename = "./meme/{$arr ['filename']}";

                        //2.–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                        $response = $vk->photos()->getMessagesUploadServer(VK_TOKEN, [
                            'group_id' => GROUP_ID
                        ]);

                        $upload_url = $response ['upload_url'];

                        //3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π upload_url
                        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º cURL
                        $ch = curl_init();
                        // –ü–æ–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞
                        $parameters = [
                            'file' => new CURLFile($filename)  // PHP >= 5.5.0
                            // 'file1' => '@path/to/1.jpg' // PHP < 5.5.0
                        ];
                        // –°—Å—ã–ª–∫–∞, –∫—É–¥–∞ –±—É–¥–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É - —ç—Ç–æ upload_url
                        curl_setopt($ch, CURLOPT_URL, $upload_url);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ —ç—Ç–æ POST-–∑–∞–ø—Ä–æ—Å
                        curl_setopt($ch, CURLOPT_POST, true);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, –∫–∞–∫–∏–µ –ø–æ–ª—è –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
                        curl_setopt($ch, CURLOPT_POSTFIELDS, $parameters);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç —Å–µ—Ä–≤–µ—Ä, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è
                        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                        // –í—ã–ø–æ–ª–Ω—è–µ–º cURL-–∑–∞–ø—Ä–æ—Å. –í —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –±—É–¥–µ—Ç JSON-–æ—Ç–≤–µ—Ç –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                        $curl_result = curl_exec($ch);
                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                        curl_close($ch);
                        //–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                        $result = json_decode ($curl_result);

                        if (!$result) {
                            $msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞...";
                            print_r ($curl_result);
                            messages_send($user_id, $msg);
                            exit ('ok');
                        }

                        $server = $result->server;
                        $photo = $result->photo;
                        $hash = $result->hash;

                        //4. –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                        $response_save = $vk->photos()->saveMessagesPhoto(VK_TOKEN, [
                            'photo' => $photo,
                            'server' => $server,
                            'hash' => $hash
                        ]);
                        $response_array = $response_save [0];
                        $media_id = $response_save[0]['id'];
                        $owner_id = $response_save[0]['owner_id'];

                        $attachment = "photo{$owner_id}_{$media_id}";

                        $msg = "–ö–∞–∫ –í–∞–º —ç—Ç–æ—Ç –º–µ–º ? üòÇ";

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("üëçüèª",  COLOR_POSITIVE, array_kbd("meme", $meme_count, "bot", 2)), kbd_callback("üëéüèª",  COLOR_NEGATIVE, array_kbd("meme", $meme_count, "bot", 3))],
                                [kbd_callback("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",  COLOR_DEFAULT, array_kbd("meme", "", "bot", 1))],
                                [kbd_callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",  COLOR_PRIMARY, array_kbd("meme", "", "bot", 5))]
                            ]
                        ];

                        messages_edit_attachment_kbd($conversation_message_id, $user_id, $msg, $attachment, $kbd);
                        exit ('ok');

                    } elseif ($cmd == 3) {

                        meme_dislike($user_id, $act);

                        $arr = meme_check($user_id);

                        if ($arr == "max:error") {
                            $msg = "–í—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –º–µ–º—ã))";
                            messages_edit($conversation_message_id, $user_id, $msg);
                            exit ('ok');
                        }

                        $meme_count = $arr ['meme_count'];

                        //1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä.
                        $filename = "./meme/{$arr ['filename']}";

                        //2.–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                        $response = $vk->photos()->getMessagesUploadServer(VK_TOKEN, [
                            'group_id' => GROUP_ID
                        ]);

                        $upload_url = $response ['upload_url'];

                        //3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π upload_url
                        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º cURL
                        $ch = curl_init();
                        // –ü–æ–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞
                        $parameters = [
                            'file' => new CURLFile($filename)  // PHP >= 5.5.0
                            // 'file1' => '@path/to/1.jpg' // PHP < 5.5.0
                        ];
                        // –°—Å—ã–ª–∫–∞, –∫—É–¥–∞ –±—É–¥–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É - —ç—Ç–æ upload_url
                        curl_setopt($ch, CURLOPT_URL, $upload_url);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ —ç—Ç–æ POST-–∑–∞–ø—Ä–æ—Å
                        curl_setopt($ch, CURLOPT_POST, true);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, –∫–∞–∫–∏–µ –ø–æ–ª—è –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
                        curl_setopt($ch, CURLOPT_POSTFIELDS, $parameters);
                        // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç —Å–µ—Ä–≤–µ—Ä, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è
                        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                        // –í—ã–ø–æ–ª–Ω—è–µ–º cURL-–∑–∞–ø—Ä–æ—Å. –í —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –±—É–¥–µ—Ç JSON-–æ—Ç–≤–µ—Ç –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                        $curl_result = curl_exec($ch);
                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                        curl_close($ch);
                        //–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                        $result = json_decode ($curl_result);

                        if (!$result) {
                            $msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞...";
                            print_r ($curl_result);
                            messages_send($user_id, $msg);
                            exit ('ok');
                        }

                        $server = $result->server;
                        $photo = $result->photo;
                        $hash = $result->hash;

                        //4. –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                        $response_save = $vk->photos()->saveMessagesPhoto(VK_TOKEN, [
                            'photo' => $photo,
                            'server' => $server,
                            'hash' => $hash
                        ]);
                        $response_array = $response_save [0];
                        $media_id = $response_save[0]['id'];
                        $owner_id = $response_save[0]['owner_id'];

                        $attachment = "photo{$owner_id}_{$media_id}";

                        $msg = "–ö–∞–∫ –í–∞–º —ç—Ç–æ—Ç –º–µ–º ? üòÇ";

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("üëçüèª",  COLOR_POSITIVE, array_kbd("meme", $meme_count, "bot", 2)), kbd_callback("üëéüèª",  COLOR_NEGATIVE, array_kbd("meme", $meme_count, "bot", 3))]
                            ]
                        ];

                        messages_edit_attachment_kbd($conversation_message_id, $user_id, $msg, $attachment, $kbd);
                        exit ('ok');


                    } elseif ($cmd == 4) {

                        act_edit($user_id, "meme:add");

                        $msg = "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Å–≤–æ–π –º–µ–º üôà";

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",  COLOR_NEGATIVE, array_kbd("meme", "", "bot", 5))]
                            ]
                        ];

                        messages_edit_kbd($conversation_message_id, $user_id, $msg, $kbd);
                        exit ('ok');

                    } elseif ($cmd == 5) {

                        act_edit($user_id, "");

                        $msg = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π üôÉ";

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–º—ã",  COLOR_POSITIVE, array_kbd("meme", "", "bot", 1))],
                                [kbd_callback("–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –º–µ–º",  COLOR_PRIMARY, array_kbd("meme", "", "bot", 4))],
                                [kbd_callback("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",  COLOR_PRIMARY, array_kbd("static", "", "bot", 1))],
                            ]
                        ];

                        messages_edit_kbd($conversation_message_id, $user_id, $msg, $kbd);
                        exit ('ok');

                    }
                } elseif ($name == "static") {

                    if ($cmd == 1) {

                        $arr = meme_static($user_id);

                        $meme_count = $arr ['meme_count'];
                        $count = $arr ['count'];
                        $likes = $arr ['likes'];
                        $dislikes = $arr ['dislikes'];

                        $msg = "–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ : \n\n–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –º–µ–º–æ–≤ : {$meme_count} –∏–∑ {$count}\n\n–ò–∑ –Ω–∏—Ö : \n‚ù§Ô∏è–õ–∞–π–∫–Ω—É–ª–∏ - {$likes}\nüíî –î–∏–∑–ª–∞–π–∫–Ω—É–ª–∏ - {$dislikes}";

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("–û–±—â–∞—è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",  COLOR_PRIMARY, array_kbd("static", "", "bot", 2))],
                                [kbd_callback("–¢–æ–ø –º–µ–º–æ–≤",  COLOR_PRIMARY, array_kbd("static", "", "bot", 3))],
                                [kbd_callback(" ‚¨ÖÔ∏è –ù–∞–∑–∞–¥",  COLOR_PRIMARY, array_kbd("meme", "", "bot", 5))],
                            ]
                        ];


                        messages_edit_kbd($conversation_message_id, $user_id, $msg, $kbd);
                        exit ('ok');

                    } elseif ($cmd == 2) {

                        $arr = meme_global_static();

                        $views = $arr ['views'];
                        $count = $arr ['count'];
                        $likes = $arr ['likes'];
                        $dislikes = $arr ['dislikes'];

                        $msg = "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ : \n\n–í—Å–µ–≥–æ –º–µ–º–æ–≤ : {$count}\nüëÄ –í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ : {$views} \n\n–ò–∑ –Ω–∏—Ö : \n‚ù§Ô∏è–õ–∞–π–∫–Ω—É–ª–∏ - {$likes}\nüíî –î–∏–∑–ª–∞–π–∫–Ω—É–ª–∏ - {$dislikes}";

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("–¢–æ–ø –º–µ–º–æ–≤",  COLOR_PRIMARY, array_kbd("static", "", "bot", 3))],
                                [kbd_callback("–ú–æ—è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",  COLOR_PRIMARY, array_kbd("static", "", "bot", 1))],
                                [kbd_callback("‚¨ÖÔ∏è  –ù–∞–∑–∞–¥",  COLOR_PRIMARY, array_kbd("meme", "", "bot", 5))],
                            ]
                        ];

                        messages_edit_kbd($conversation_message_id, $user_id, $msg, $kbd);
                        exit ('ok');

                    } elseif ($cmd == 3) {

                        $arr = meme_top_static();
                        $count = count($arr);

                        $msg_load = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ üòá";
                        messages_edit($conversation_message_id, $user_id, $msg_load);

                        for ($i=1;$i<=$count;$i++) {

                            //1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä.
                            $filename = "./meme/".$arr [$i]['file_name'];

                            //2.–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                            $response = $vk->photos()->getMessagesUploadServer(VK_TOKEN, [
                                'group_id' => GROUP_ID
                            ]);

                            $upload_url = $response ['upload_url'];

                            //3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π upload_url
                            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º cURL
                            $ch = curl_init();
                            // –ü–æ–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞
                            $parameters = [
                                'file' => new CURLFile($filename)  // PHP >= 5.5.0
                                // 'file1' => '@path/to/1.jpg' // PHP < 5.5.0
                            ];
                            // –°—Å—ã–ª–∫–∞, –∫—É–¥–∞ –±—É–¥–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É - —ç—Ç–æ upload_url
                            curl_setopt($ch, CURLOPT_URL, $upload_url);
                            // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ —ç—Ç–æ POST-–∑–∞–ø—Ä–æ—Å
                            curl_setopt($ch, CURLOPT_POST, true);
                            // –ì–æ–≤–æ—Ä–∏–º cURL, –∫–∞–∫–∏–µ –ø–æ–ª—è –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
                            curl_setopt($ch, CURLOPT_POSTFIELDS, $parameters);
                            // –ì–æ–≤–æ—Ä–∏–º cURL, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç —Å–µ—Ä–≤–µ—Ä, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è
                            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                            // –í—ã–ø–æ–ª–Ω—è–µ–º cURL-–∑–∞–ø—Ä–æ—Å. –í —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –±—É–¥–µ—Ç JSON-–æ—Ç–≤–µ—Ç –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                            $curl_result = curl_exec($ch);
                            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                            curl_close($ch);
                            //–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                            $result = json_decode ($curl_result);

                            if (!$result) {
                                $msg = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞...";
                                print_r ($curl_result);
                                messages_send($user_id, $msg);
                                exit ('ok');
                            }

                            $server = $result->server;
                            $photo = $result->photo;
                            $hash = $result->hash;

                            //4. –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                            $response_save = $vk->photos()->saveMessagesPhoto(VK_TOKEN, [
                                'photo' => $photo,
                                'server' => $server,
                                'hash' => $hash
                            ]);
                            $response_array = $response_save [0];
                            $media_id = $response_save[0]['id'];
                            $owner_id = $response_save[0]['owner_id'];

                            $attachments [$i] = "photo{$owner_id}_{$media_id}";

                            $msg_top [$i] = "{$i} –º–µ—Å—Ç–æ - ".$arr [$i]['views']." üëÄ /".$arr [$i]['likes']." ‚ù§Ô∏è /".$arr [$i]['dislikes']." üíî";

                            sleep (0.1);
                        }

                        $msg = "–¢–æ–ø –º–µ–º–æ–≤ –ø–æ –ª–∞–π–∫–∞–º : \n\n –ú–µ—Å—Ç–æ - –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤/–õ–∞–π–∫–æ–≤/–î–∏–∑–ª–∞–π–∫–æ–≤\n".$msg_top [1]."\n".$msg_top [2]."\n".$msg_top [3]."\n".$msg_top [4]."\n".$msg_top [5]."\n".$msg_top [6]."\n".$msg_top [7]."\n".$msg_top [8]."\n".$msg_top [9]."\n";

                        $attachment = $attachments [1].",".$attachments [2].",".$attachments [3].",".$attachments [4].",".$attachments [5].",".$attachments [6].",".$attachments [7].",".$attachments [8].",".$attachments [9];

                        $kbd = [
                            'inline' => true,
                            'buttons' => [
                                [kbd_callback("–ú–æ—è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",  COLOR_PRIMARY, array_kbd("static", "", "bot", 1))],
                                [kbd_callback("–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",  COLOR_PRIMARY, array_kbd("static", "", "bot", 2))],
                                [kbd_callback("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",  COLOR_PRIMARY, array_kbd("meme", "", "bot", 5))],
                            ]
                        ];

                        messages_edit_attachment_kbd($conversation_message_id, $user_id, $msg, $attachment, $kbd);
                        exit ('ok');

                    }

                }
            }

        }

    }

    exit ("ok");
?>